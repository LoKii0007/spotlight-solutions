datasource db {
  provider = "postgresql" // or your preferred database
  url      = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id            String  @id @default(cuid())
  userId        String?
  refresh_token String  @db.Text
  access_token  String  @db.Text
  expires_at    Int?
  user          User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String    @id @default(cuid())
  firstName        String?
  lastName         String?
  email            String?   @unique
  password         String?
  emailVerified    Boolean?
  image            String?
  verifyCode       String?
  verifyCodeExpiry DateTime?
  accountConnected Boolean?  @default(false)
  accounts         Account[]
  sessions         Session[]
  Boards           Board[]
  Tasks            Tasks[]
  Columns          Columns[]
}

model CompanyDetails {
  id        String  @id @default(cuid())
  name      String
  address   String
  phone     Int?
  email     String?
  CIN       String?
  IECode    String?
  GSTIN     String?
  telephone Int?
}

model Tasks {
  id          String   @id @default(cuid())
  boardId     String
  userId      String
  columnId    String
  priority    String
  status      String
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Board       Board    @relation(fields: [boardId], references: [id])
  User        User     @relation(fields: [userId], references: [id])
  Column      Columns  @relation(fields: [columnId], references: [id])
}

model Columns {
  id        String   @id @default(cuid())
  title     String
  boardId   String
  userId    String
  Tasks     Tasks[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User      User     @relation(fields: [userId], references: [id])
  Board     Board    @relation(fields: [boardId], references: [id])
}

model Board {
  id          String    @id @default(cuid())
  title       String
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  Tasks       Tasks[]
  Columns     Columns[]

  user        User      @relation(fields: [userId], references: [id])
}
